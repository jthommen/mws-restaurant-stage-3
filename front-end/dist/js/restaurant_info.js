let restaurant;var map;window.initMap=(()=>{fetchRestaurantFromURL((e,t)=>{e?console.error(e):(self.map=new google.maps.Map(document.getElementById("map"),{zoom:16,center:t.latlng,scrollwheel:!1}),fillBreadcrumb(),LocalState.getMapMarkerForRestaurant(self.restaurant,self.map))})}),fetchRestaurantFromURL=(e=>{if(self.restaurant)return void e(null,self.restaurant);const t=getParameterByName("id");t?LocalState.getRestaurantById(t,(t,n)=>{self.restaurant=n,n?(fillRestaurantHTML(),e(null,n)):console.error(t)}):(error="No restaurant id in URL",e(error,null))}),fillRestaurantHTML=((e=self.restaurant)=>{document.getElementById("restaurant-name").innerHTML=e.name,document.getElementById("restaurant-address").innerHTML=e.address;const t=document.getElementById("restaurant-img");t.className="restaurant-img",t.setAttribute("alt",`Restaurant ${e.name}`);const n=LocalState.getImageUrlForRestaurant(e);/undefined/.test(n)?(t.src="/img/icons/icon-placeholder.png",console.log("Image undefined!")):t.src=n,document.getElementById("restaurant-cuisine").innerHTML=e.cuisine_type,e.operating_hours&&fillRestaurantHoursHTML(),fetchReviews()}),fetchReviews=(()=>{LocalState.getReviewsByRestaurant(self.restaurant.id,(e,t)=>{self.restaurant.reviews=t,fillReviewsHTML()})}),fillRestaurantHoursHTML=((e=self.restaurant.operating_hours)=>{const t=document.getElementById("restaurant-hours");for(let n in e){const a=document.createElement("tr"),r=document.createElement("td");r.innerHTML=n,a.appendChild(r);const l=document.createElement("td");l.innerHTML=e[n],a.appendChild(l),t.appendChild(a)}}),fillReviewsHTML=((e=self.restaurant.reviews)=>{const t=document.getElementById("reviews-container");if(!document.getElementById("review-title")){const e=document.createElement("h3");e.id="review-title",e.innerHTML="Reviews",t.appendChild(e)}if(!document.getElementById("toggle-review-modal")){const e=document.createElement("button");e.id="toggle-review-modal",e.innerHTML="Add Review",e.onclick=(()=>{modal.style.display="block"}),t.appendChild(e)}if(!e){const e=document.createElement("p");return e.innerHTML="No reviews yet!",void t.appendChild(e)}const n=document.getElementById("reviews-list");n.innerHTML="",e.forEach(e=>{n.appendChild(createReviewHTML(e))}),t.appendChild(n)}),addReviewHTML=(e=>{document.getElementById("reviews-list").prepend(createReviewHTML(e))}),createReviewHTML=(e=>{const t=document.createElement("div"),n=document.createElement("div"),a=document.createElement("div"),r=document.createElement("div");t.setAttribute("class","review"),n.setAttribute("class","review-header"),a.setAttribute("class","review-body"),r.innerHTML=e.name,r.setAttribute("class","reviewer-name"),t.appendChild(n),t.appendChild(a),n.appendChild(r);const l=document.createElement("div");formatTime=(e=>{const t=new Date(e),n=t.getDate(),a=t.getMonth();return`${t.getFullYear()}-${a}-${n}, ${t.getHours()}:${t.getMinutes()}`}),l.innerHTML=formatTime(e.createdAt),l.setAttribute("class","review-date"),n.appendChild(l);const d=document.createElement("div");d.innerHTML=`Rating: ${e.rating}`,d.setAttribute("class","review-rating"),a.appendChild(d);const i=document.createElement("div");return i.innerHTML=e.comments,a.appendChild(i),t});let modal=document.getElementById("add-review-modal"),closeBtn=document.getElementsByClassName("close")[0];window.addEventListener("keyup",e=>{27==e.keyCode&&(modal.style.display="none")}),closeBtn.onclick=(()=>modal.style.display="none"),window.onclick=(e=>{e.target==modal&&(modal.style.display="none")}),window.onload=(e=>{modal.style.display="block"}),addReview=(()=>{event.preventDefault();let e,t=getParameterByName("id"),n=document.getElementById("review-author").value,a=document.getElementById("review-comments").value,r=[],l=document.getElementById("form-error");if((n.length<2||n.length>50)&&r.push("<p>Please enter a name with 3-50 characters.</p>"),document.querySelector('input[name="rating"]:checked')?e=document.querySelector('input[name="rating"]:checked').value:r.push("<p>Please choose a rating.</p>"),(a.length>250||a.length<0)&&r.push("<p>Please write comments with between 25-250 characters in length. </p>"),r.length>0)l.innerHTML=r.join(""),l.style.padding="10px";else{l.innerHTML="";const r=[n,e,a,t];LocalState.addReview(r);const d={restaurant_id:parseInt(r[3]),rating:parseInt(r[1]),name:r[0],comments:r[2],createdAt:new Date,updatedAt:new Date};addReviewHTML(d),document.getElementById("review-form").reset(),modal.style.display="none"}}),fillBreadcrumb=((e=self.restaurant)=>{const t=document.getElementById("breadcrumb"),n=document.createElement("li");n.innerHTML=e.name,n.setAttribute("aria-current","page"),t.appendChild(n)}),getParameterByName=((e,t)=>{t||(t=window.location.href),e=e.replace(/[\]]/g,"\\$&");const n=new RegExp(`[?&]${e}(=([^&#]*)|&|#|$)`).exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
